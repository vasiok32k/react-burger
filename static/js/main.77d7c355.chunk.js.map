{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","ings","sum","disabledInfo","orderSummary","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","totalPrice","dispatch","ingName","ingredientName","withRouter","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","get","fetchedOrders","data","err","App","Orders","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICE","reducer","action","store","createStore","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.77d7c355.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"HuxZPfsTQk6kf8ScsD35c\",\"BreadTop\":\"_10-cTAWgqIPt0kctF6Bmth\",\"Seeds1\":\"_3xHtzMBSXqXFtyL2Kkf3Gu\",\"Seeds2\":\"_1cUso01mEhPiOvVew6u076\",\"Meat\":\"_13nANrA0F7BA6yWg1cuxyQ\",\"Cheese\":\"_1FxeY1KKtrGNpRoQOfCofJ\",\"Salad\":\"_1iTJEGGLnCbWNIyCGWETEe\",\"Bacon\":\"_3vrAI2Ovef69xUC2be2Tib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_21TuB0Dn6JJ4uEYkpf9Fnt\",\"Open\":\"_1pVYRaiLBtOhv7pDNimBtN\",\"Close\":\"_3Yv1lLM58kyRaR73W22KWZ\",\"Logo\":\"_3TkPvMPv1WUzP1NgAUT6zE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1jYc3QBtl-VmgIWdCI3dgO\",\"Label\":\"_33Z-plxrqIneM7Mz2ytOp0\",\"Less\":\"_377MJOSYo2UYjMj1U14k03\",\"More\":\"_28-hQFZzubxjJbKbVayD5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"s67N0w35nKdhFxX_3zncw\",\"Label\":\"_n-1my-7YxR9EuzWR3hhB\",\"InputElement\":\"_2-aFxd6_SUnHTHpTf8dvYS\",\"Invalid\":\"_1sl1p7M77V1I9nxTQviKpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_2JJW-ZloCsemWXc-SwluYI\",\"Logo\":\"_1efBDQJDXv28ttI2RtLXHD\",\"DesktopOnly\":\"WADUdqFzcPCSrUAJGFXrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_23bcunS9Qq8yRK8U15WWqn\",\"active\":\"_2zJdO1aspVrGyx-JgFjMYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_3_01fOopnX44ubS-oaxkTR\",\"OrderButton\":\"myBwTggVYuoTSZ0phsfQj\",\"enable\":\"_3jYIqaQjQmo_d3HEVAUYmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"QI7b2B9HFdWRqXJlhx5ZF\",\"Success\":\"_2dHUtYmIiKVpRl3omZjpfb\",\"Danger\":\"_2xnhNuUUklZ_76EhvNOs5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_3pLYCt_XGv-qW86lAaB4Ex\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_19WaN2tuJCY7yX7kGD_ZBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_yd_dZzBcrRT8NyTlYD_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_26to0rZE2eHfVYZs2qTwFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"efy1yH85jAELhES8l7b-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_3K4F-Qd9PP5cwDxK60_fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_32_-amvWF8w07UmzDeLfZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"_1DDwYTkbvNoVwBDs8ZptVg\",\"load2\":\"_1N7mgFPOaqyEMO5kgrH5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_1xBm4j5hECL-q6sCIhiBB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_1J81rlRO5zxuF98VMkEamZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.css';\n\nconst navigationItem = ( props ) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ( 'bread-bottom' ):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ( 'bread-top' ):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ( 'meat' ):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ( 'cheese' ):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ( 'bacon' ):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            case ( 'salad' ):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    console.log(props);\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\n\nimport classes from './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate () {\n        console.log('[Modal] WillUpdate');\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    // This could be a functional component, doesn't have to be a class\n    componentWillUpdate() {\n        console.log('[OrderSummary] WillUpdate');\n    }\n\n    render () {\n        const ingredientSummary = Object.keys( this.props.ingredients )\n            .map( igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li> );\n            } );\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req => {\n                this.setState( { error: null } );\n                return req;\n            } );\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\n                this.setState( { error: error } );\n            } );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject( this.reqInterceptor );\n            axios.interceptors.response.eject( this.resInterceptor );\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState( { error: null } );\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-8f978.firebaseio.com/'\n});\n\nexport default instance;\n","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actionTypes from '../../store/actions';\n\n\nclass BurgerBuilder extends Component {\n    /*constructor (props) {\n        super(props);\n        this.state = {...}\n    }*/\n    state = {\n        purchasing: false,\n        loading: false,\n        error: false\n    };\n\n    componentDidMount () {\n        console.log(this.props);\n        console.log(this.props.ings);\n        /*axios.get('https://react-my-burger-8f978.firebaseio.com/ingredients.json')\n            .then(response => {\n                this.setState({ingredients: response.data});\n            }).catch(error => {\n                this.setState({error: true});\n        });*/\n    };\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            });\n        return sum > 0;\n    };\n\n    /*addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    };\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    };*/\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    };\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    };\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout');\n    };\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\n\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />\n        }\n\n        if (this.state.loading) {\n            orderSummary = <Spinner />\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(withRouter(BurgerBuilder), axios));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n};\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP CODE'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: '',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false,\n        loading: false\n    };\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({loading: true});\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        };\n        axios.post('/orders.json', order)\n            .then(response => {\n                this.setState({loading: false});\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({loading: false});\n            });\n    };\n\n    checkValidity (value, rules) {\n        let isValid = true;\n\n        if (!rules) {\n            return true;\n        }\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    };\n\n    render () {\n        const formElementArray = [];\n        for (let key in this.state.orderForm) {\n            formElementArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementArray.map(formElement => (\n                    <Input key={formElement.id}\n                           elementType={formElement.config.elementType}\n                           elementConfig={formElement.config.elementConfig}\n                           value={formElement.config.value}\n                           invalid={!formElement.config.valid}\n                           shouldValidate={formElement.config.validation}\n                           touched={formElement.config.touched}\n                           changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n\n        if (this.state.loading) {\n            form = <Spinner />\n        }\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    };\n};\n\nexport default connect(mapStateToProps)(ContactData);","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport {connect} from 'react-redux';\n\nclass Checkout extends Component {\n    /*state = {\n        ingredients: null,\n        price: 0\n    };\n\n    componentWillMount () {\n        const query = new URLSearchParams(this.props.location.search);\n        const ingredients = {};\n        let price = 0;\n        for (let param of query.entries()) {\n            // ['salad', 1]\n            if (param[0] === 'price') {\n                price = param[1];\n            } else {\n                ingredients[param[0]] = +param[1];\n            }\n        }\n        this.setState({ingredients: ingredients, totalPrice: price});\n    };*/\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    };\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    };\n\n    render () {\n        return (\n            <div>\n                <CheckoutSummary checkoutCancelled={this.checkoutCancelledHandler}\n                                 checkoutContinued={this.checkoutContinuedHandler}\n                                 ingredients={this.props.ings} />\n                <Route path={this.props.match.path + '/contact-data'}\n                       component={ContactData} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients\n    };\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                this.setState({loading: false, orders: fetchedOrders});\n            })\n            .catch(err => {\n                this.setState({loading: false});\n            });\n    }\n\n    render () {\n        return (\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n    },\n    totalPrice: 4\n};\n\nconst INGREDIENT_PRICE = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICE[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICE[action.ingredientName]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}